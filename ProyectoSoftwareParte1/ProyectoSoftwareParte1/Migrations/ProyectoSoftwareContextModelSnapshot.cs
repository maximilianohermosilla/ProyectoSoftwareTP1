// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoSoftwareParte1.Models;

#nullable disable

namespace ProyectoSoftwareParte1.Migrations
{
    [DbContext(typeof(ProyectoSoftwareContext))]
    partial class ProyectoSoftwareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Date");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comanda", (string)null);
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaMercaderiaId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderia", (string)null);
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaEntregaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega", (string)null);

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MercaderiaId"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            MercaderiaId = 1,
                            Imagen = "",
                            Ingredientes = "Jamón y Queso",
                            Nombre = "Empanada",
                            Precio = 250,
                            Preparacion = "Horno",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 2,
                            Imagen = "",
                            Ingredientes = "Papa, Cheddar",
                            Nombre = "Papas fritas",
                            Precio = 800,
                            Preparacion = "Fritas",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 3,
                            Imagen = "",
                            Ingredientes = "Jamón y Queso",
                            Nombre = "Sorrentinos",
                            Precio = 1100,
                            Preparacion = "Hervir",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 4,
                            Imagen = "",
                            Ingredientes = "Ricota",
                            Nombre = "Ravioles",
                            Precio = 1000,
                            Preparacion = "Hervir",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 5,
                            Imagen = "",
                            Ingredientes = "Papa, harina, manteca",
                            Nombre = "Ñoquis",
                            Precio = 1050,
                            Preparacion = "Hervir",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 6,
                            Imagen = "",
                            Ingredientes = "Asado, vacío, chorizo, morcilla, riñon, molleja, entraña",
                            Nombre = "Parrillada para 2",
                            Precio = 3200,
                            Preparacion = "Parrilla a leña",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 7,
                            Imagen = "",
                            Ingredientes = "Matambre de cerdo, salsa de tomate, jamón, muzzarella",
                            Nombre = "Matambre a la pizza",
                            Precio = 2100,
                            Preparacion = "Parrilla a leña",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 8,
                            Imagen = "",
                            Ingredientes = "Harina, levadura, salsa de tomate, muzzarella",
                            Nombre = "Pizza Muzzarella",
                            Precio = 1300,
                            Preparacion = "Horno",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 9,
                            Imagen = "",
                            Ingredientes = "Harina, levadura, salsa de tomate, muzzarella, jamón, morrón",
                            Nombre = "Pizza Especial",
                            Precio = 1500,
                            Preparacion = "Horno",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 10,
                            Imagen = "",
                            Ingredientes = "Harina, levadura, salsa de tomate, muzzarella, tomate, orégano, ajo",
                            Nombre = "Pizza Napolitana",
                            Precio = 1500,
                            Preparacion = "Horno",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 11,
                            Imagen = "",
                            Ingredientes = "Milanesa de ternera, pan",
                            Nombre = "Sandwich Milanesa Simple",
                            Precio = 1000,
                            Preparacion = "Frita",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 12,
                            Imagen = "",
                            Ingredientes = "Milanesa de ternera, pan, lechuga, tomate, huevo",
                            Nombre = "Sandwich Milanesa Completo",
                            Precio = 1300,
                            Preparacion = "Frita",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 13,
                            Imagen = "",
                            Ingredientes = "Hamburguesa, pan",
                            Nombre = "Hamburguesa Simple",
                            Precio = 750,
                            Preparacion = "Plancha",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 14,
                            Imagen = "",
                            Ingredientes = "Hamburguesa, , lechuga, tomate, jamón, queso, huevo",
                            Nombre = "Hamburguesa Completa",
                            Precio = 1000,
                            Preparacion = "Plancha",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 15,
                            Imagen = "",
                            Ingredientes = "Lechuga, tomate, cebolla",
                            Nombre = "Ensalada Simple",
                            Precio = 600,
                            Preparacion = "Ninguna",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 16,
                            Imagen = "",
                            Ingredientes = "Papa, zanahoria, arvejas, huevo",
                            Nombre = "Ensalada Rusa",
                            Precio = 700,
                            Preparacion = "Hervir",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 17,
                            Imagen = "",
                            Ingredientes = "No aplica",
                            Nombre = "Gaseosa",
                            Precio = 500,
                            Preparacion = "Ninguna",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 18,
                            Imagen = "",
                            Ingredientes = "No aplica",
                            Nombre = "Agua mineral",
                            Precio = 300,
                            Preparacion = "Ninguna",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 19,
                            Imagen = "",
                            Ingredientes = "Lúpulo, cebada, malta",
                            Nombre = "Cerveza IPA",
                            Precio = 700,
                            Preparacion = "Ninguna",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 20,
                            Imagen = "",
                            Ingredientes = "Leche, huevo, azúcar",
                            Nombre = "Flan",
                            Precio = 600,
                            Preparacion = "Baño María",
                            TipoMercaderiaId = 10
                        });
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMercaderiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.Comanda", b =>
                {
                    b.HasOne("ProyectoSoftwareParte1.Models.FormaEntrega", "FormaEntregaNavigator")
                        .WithMany()
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntregaNavigator");
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.ComandaMercaderia", b =>
                {
                    b.HasOne("ProyectoSoftwareParte1.Models.Comanda", "ComandaNavigation")
                        .WithMany()
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoSoftwareParte1.Models.Mercaderia", "MercaderiaNavigation")
                        .WithMany()
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComandaNavigation");

                    b.Navigation("MercaderiaNavigation");
                });

            modelBuilder.Entity("ProyectoSoftwareParte1.Models.Mercaderia", b =>
                {
                    b.HasOne("ProyectoSoftwareParte1.Models.TipoMercaderia", "TipoMercaderiaNavigation")
                        .WithMany()
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderiaNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
